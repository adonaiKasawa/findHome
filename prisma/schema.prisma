// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model bayeurs {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime @default(now())

  id         Int         @id @default(autoincrement())
  nom        String
  prenom     String
  email      String      @unique
  tel        String
  adresse    String
  password   String
  creditCard String
  hashedRt   String?
  propriete  propriete[]
}

model propriete {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime @default(now())

  id      Int     @id @default(autoincrement())
  nom     String
  type    String
  adresse String
  video   String?
  photo   String?

  bayeurs   bayeurs? @relation(fields: [bayeursId], references: [id])
  bayeursId Int?

  models models[]
}

model models {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime @default(now())

  id             Int    @id @default(autoincrement())
  numero         String
  nom            String
  nombrePiece    Int
  prix           Int
  periodPayement String
  video          String
  photo          String

  propriete   propriete? @relation(fields: [proprieteId], references: [id])
  proprieteId Int?

  piece           piece[]
  evoulutionPrix  evolutionPrix[]
  periodPayements periodPayement[]
}

model piece {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime @default(now())

  id          Int    @id @default(autoincrement())
  type        String
  photo       String
  description String

  models   models? @relation(fields: [modelsId], references: [id])
  modelsId Int?
}

model evolutionPrix {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime @default(now())

  id   Int @id @default(autoincrement())
  prix Int

  models   models? @relation(fields: [modelsId], references: [id])
  modelsId Int?
}

model periodPayement {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime @default(now())

  id     Int    @id @default(autoincrement())
  period String

  models   models? @relation(fields: [modelsId], references: [id])
  modelsId Int?
}
